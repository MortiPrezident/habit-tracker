import math

from telebot.types import (
    ReplyKeyboardMarkup,
    KeyboardButton,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
)


class KeyboardFactory:
    @staticmethod
    def auth_menu() -> ReplyKeyboardMarkup:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        /register, /login
        """
        kb = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        kb.add(KeyboardButton("/register"), KeyboardButton("/login"))
        return kb

    @staticmethod
    def main_menu() -> ReplyKeyboardMarkup:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
        /add_habit, /list_habits
        """
        kb = ReplyKeyboardMarkup(resize_keyboard=True)
        kb.add(KeyboardButton("/add_habit"), KeyboardButton("/list_habits"))
        return kb

    @staticmethod
    def choice_inline() -> InlineKeyboardMarkup:
        kb = InlineKeyboardMarkup(row_width=2)

        kb.add(
            InlineKeyboardButton(text="‚úÖ –î–∞!", callback_data="choice:yes"),
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç!", callback_data="choice:no"),
        )

        return kb

    @staticmethod
    def ok_inline() -> InlineKeyboardMarkup:
        kb = InlineKeyboardMarkup(row_width=1)
        kb.add(InlineKeyboardButton(text="‚úÖ OK", callback_data="noop"))

        return kb

    @staticmethod
    def render_postgres_bar(count: int, length: int = 21) -> str:
        filled = min(count, length)
        empty = max(length - filled, 0)
        return "üü©" * filled + "‚¨ú" * empty

    @staticmethod
    def habits_inline(
        habits: list[dict],
        page: int = 1,
        page_size: int = 5,
    ) -> InlineKeyboardMarkup:
        """
        Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–≤—ã—á–µ–∫ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º –∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π.

        :param habits: —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–≤—ã—á–µ–∫
        :param page: —Ç–µ–∫—É—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–Ω–∞—á–∏–Ω–∞—è —Å 1)
        :param page_size: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∏–≤—ã—á–µ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
        """
        kb = InlineKeyboardMarkup(row_width=1)
        total = len(habits)
        total_pages = math.ceil(total / page_size)

        page = min(page, total_pages)

        start = (page - 1) * page_size
        end = start + page_size
        page_habits = habits[start:end]
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏–≤—ã—á–µ–∫
        for habit in page_habits:
            bar = KeyboardFactory.render_postgres_bar(habit["count"])
            text = f"{habit['name']} [{bar}]"
            kb.add(
                InlineKeyboardButton(
                    text=text, callback_data=f"habit_name:{habit['name']}"
                )
            )

        nav = []

        if page > 1:
            nav.append(
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data=f"habits_page:{page - 1}"
                )
            )
        if page < total_pages:
            nav.append(
                InlineKeyboardButton(
                    text="‚ñ∂Ô∏è –í–ø–µ—Ä—ë–¥", callback_data=f"habits_page:{page + 1}"
                )
            )

        if nav:
            kb.row(*nav)

        kb.add(InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu"))

        return kb

    @staticmethod
    def habit_actions(
        habit_id: int, completed: bool, count: int
    ) -> InlineKeyboardMarkup:
        """
        Inline-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π –Ω–∞–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–∏–≤—ã—á–∫–æ–π
        """

        kb = InlineKeyboardMarkup(row_width=2)
        if not completed and count < 21:
            kb.add(
                InlineKeyboardButton(text="–í—ã–ø–æ–ª–Ω–∏—Ç—å", callback_data=f"habit_complete")
            )
        kb.add(
            InlineKeyboardButton(
                text="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data=f"edit_habit:{habit_id}"
            ),
            InlineKeyboardButton(
                text="–£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_habit:{habit_id}"
            ),
            InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"habit_info_back"),
        )
        return kb

    @staticmethod
    def edit_choice(habit_id: int) -> InlineKeyboardMarkup:
        kb = InlineKeyboardMarkup(row_width=2)
        kb.add(
            InlineKeyboardButton(
                text="–ù–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"edit:name:{habit_id}"
            ),
            InlineKeyboardButton(
                text="–æ–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"edit:description:{habit_id}"
            ),
            InlineKeyboardButton(
                text="–≤—Ä–µ–º—è –æ–ø–æ–≤–µ—â–µ–Ω–∏—è", callback_data=f"edit:time:{habit_id}"
            ),
            InlineKeyboardButton(text="–Ω–∞–∑–∞–¥", callback_data="edit_back"),
        )

        return kb
