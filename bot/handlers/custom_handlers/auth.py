from telebot.types import Message
from bot.loader import bot_tracker
from bot.token_utils.session_manager import save_tokens
import httpx
from bot.config_data.config import API_URL
from bot.user_interface.keyboard import KeyboardFactory as kb
from bot.flow.auth_flow import RegisterFlow, LoginFlow


@bot_tracker.message_handler(commands=["register"])
async def cmd_register(message: Message):
    await bot_tracker.set_state(message.from_user.id, RegisterFlow.waiting_name, message.chat.id)
    await bot_tracker.send_message(
        message.chat.id,
        "üìù –í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω:",
    )


@bot_tracker.message_handler(state=RegisterFlow.waiting_name)
async def process_register_name(message: Message):
    name = message.text.strip()
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è (–≤–Ω—É—Ç—Ä–∏ telebot —Ö—Ä–∞–Ω–∏—Ç—Å—è data –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    await bot_tracker.add_data(message.chat.id, chat_id=message.chat.id, name=name)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    await bot_tracker.set_state(message.from_user.id, RegisterFlow.waiting_password, message.chat.id)
    await bot_tracker.send_message(message.chat.id, "üîë –ü—Ä–∏–¥—É–º–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å:")


@bot_tracker.message_handler(state=RegisterFlow.waiting_password)
async def process_register_password(message: Message, state):
    chat_id = message.chat.id
    data = await bot_tracker.get_data(message.chat.id)
    username = data["name"]
    password = message.text.strip()

    # ‚Ä¶ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ API, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã ‚Ä¶
    async with httpx.AsyncClient() as client:
        resp = await client.post(
            f"{API_URL}/auth/register",
            json={
                "name": username,
                "password": password,
                "chat_id": chat_id
            }
        )
    if resp.status_code == 200:
        data = resp.json()
        await save_tokens(chat_id, data["access_token"], data["refresh_token"])
        await bot_tracker.send_message(chat_id, "‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=kb.main_menu())
    else:
        err = resp.json().get("detail", resp.text)
        await bot_tracker.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {err}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑", reply_markup=kb.auth_menu())


    await bot_tracker.finish_state(message.chat.id)  # —Å–±—Ä–æ—Å FSM





@bot_tracker.message_handler(commands=["login"])
async def cmd_login(message: Message):
    chat_id = message.chat.id

    await bot_tracker.set_state(message.from_user.id, LoginFlow.waiting_name, message.chat.id)
    await bot_tracker.send_message(chat_id, "üë§ –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω:")


@bot_tracker.message_handler(state=LoginFlow.waiting_name)
async def process_login_name(message: Message, state):
    chat_id = message.chat.id
    name = message.text.strip()
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è (–≤–Ω—É—Ç—Ä–∏ telebot —Ö—Ä–∞–Ω–∏—Ç—Å—è data –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)
    await bot_tracker.update_data(chat_id, name=name)
    # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É
    await bot_tracker.set_state(message.from_user.id, LoginFlow.waiting_password, message.chat.id)
    await bot_tracker.send_message(chat_id, "üîë –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å:")


@bot_tracker.message_handler(state=LoginFlow.waiting_password)
async def process_login_password(message: Message, state):
    chat_id = message.chat.id
    data = await bot_tracker.get_data(message.chat.id)
    username = data["name"]
    password = message.text.strip()

    # ‚Ä¶ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ API, —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω—ã ‚Ä¶
    async with httpx.AsyncClient() as client:
        resp = await client.post(
            f"{API_URL}/auth/login",
            json={
                "name": username,
                "password": password
            }
        )

    if resp.status_code == 200:
        data = resp.json()
        await save_tokens(chat_id, data["access_token"], data["refresh_token"])
        await bot_tracker.send_message(chat_id,"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏! –í—ã–±–µ—Ä–µ—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ", reply_markup=kb.main_menu())
    else:
        err = resp.json().get("detail", resp.text)
        await bot_tracker.send_message(chat_id,f"‚ùå –û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: {err}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑",reply_markup=kb.auth_menu(),
        )

    await bot_tracker.finish_state(message.chat.id)  # —Å–±—Ä–æ—Å FSM
