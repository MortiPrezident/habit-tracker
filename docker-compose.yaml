services:
  db:
    image: postgres:16
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s

  redis:
    image: redis:7-alpine
    restart: always
    env_file:
      - .env
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  app:
    build:
      context: .
      dockerfile: Dockerfile.app
    restart: always
    env_file:
      - .env
    ports:
      - "5000:5000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - backend
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5000/health" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    command: ["/app/entrypoint.sh"]

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    restart: always
    env_file:
      - .env
    depends_on:
      app:
        condition: service_healthy
    networks:
      - backend
    command: ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.bot.conf"]

networks:
  backend:
    driver: bridge

volumes:
  postgres_data:
  redis_data: